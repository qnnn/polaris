# Tencent is pleased to support the open source community by making Polaris available.
#
# Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
#
# Licensed under the BSD 3-Clause License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://opensource.org/licenses/BSD-3-Clause
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

# server启动引导配置
bootstrap:
  # 全局日志
  logger:
    config:
      rotateOutputPath: log/runtime/polaris-config.log
      errorRotateOutputPath: log/runtime/polaris-config-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      # - stdout
      # errorOutputPaths:
      # - stderr
    auth:
      rotateOutputPath: log/runtime/polaris-auth.log
      errorRotateOutputPath: log/runtime/polaris-auth-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    store:
      rotateOutputPath: log/runtime/polaris-store.log
      errorRotateOutputPath: log/runtime/polaris-store-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    cache:
      rotateOutputPath: log/runtime/polaris-cache.log
      errorRotateOutputPath: log/runtime/polaris-cache-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    naming:
      rotateOutputPath: log/runtime/polaris-naming.log
      errorRotateOutputPath: log/runtime/polaris-naming-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    healthcheck:
      rotateOutputPath: log/runtime/polaris-healthcheck.log
      errorRotateOutputPath: log/runtime/polaris-healthcheck-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    xdsv3:
      rotateOutputPath: log/runtime/polaris-xdsv3.log
      errorRotateOutputPath: log/polaris-xdsv3-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    apiserver:
      rotateOutputPath: log/runtime/polaris-apiserver.log
      errorRotateOutputPath: log/runtime/polaris-apiserver-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    token-bucket:
      rotateOutputPath: log/runtime/polaris-ratelimit.log
      errorRotateOutputPath: log/runtime/polaris-ratelimit-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    default:
      rotateOutputPath: log/runtime/polaris-default.log
      errorRotateOutputPath: log/runtime/polaris-default-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    discoverEventLocal:
      rotateOutputPath: log/event/polaris-discoverevent.log
      errorRotateOutputPath: log/event/polaris-discoverevent-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      onlyContent: true
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    discoverLocal:
      rotateOutputPath: log/statis/polaris-discoverstat.log
      errorRotateOutputPath: log/statis/polaris-discoverstat-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    local:
      rotateOutputPath: log/statis/polaris-statis.log
      errorRotateOutputPath: log/statis/polaris-statis-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    HistoryLogger:
      rotateOutputPath: log/operation/polaris-history.log
      errorRotateOutputPath: log/operation/polaris-history-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      rotationMaxDurationForHour: 24
      outputLevel: error
      onlyContent: true
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    cmdb:
      rotateOutputPath: log/runtime/polaris-cmdb.log
      errorRotateOutputPath: log/runtime/polaris-cmdb-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: error
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
  polaris_service:
    # probe_address: ##DB_ADDR##
    enable_register: true
    isolated: false
    services:
      - name: polaris.checker
        protocols:
          - service-grpc
# 核心逻辑的配置
auth:
  # auth的option现已迁移至user及strategy
  # 在auth.option配置依然有效，但是会收到警告，提醒您尽快迁移配置至user及strategy级别下
  user:
    name: defaultUser
    option:
      # token 加密的 salt，鉴权解析 token 时需要依靠这个 salt 去解密 token 的信息
      # salt 的长度需要满足以下任意一个：len(salt) in [16, 24, 32]
      salt: polarismesh@2021
  strategy:
    name: defaultStrategy
    option:
      # 控制台鉴权能力开关，默认开启
      consoleOpen: true
      # 客户端鉴权能力开关, 默认关闭
      clientOpen: false
namespace:
  # 是否允许自动创建命名空间
  autoCreate: true
naming:
  auth:
    open: false
  # 批量控制器
  batch:
    register:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 32
      concurrency: 64
    deregister:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 32
      concurrency: 64
    clientRegister:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 1024
      concurrency: 64
    clientDeregister:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 32
      concurrency: 64
# 配置中心模块启动配置
config:
  # 是否启动配置模块
  open: true
  cache:
    #配置文件缓存过期时间，单位s
    expireTimeAfterWrite: 3600
# 健康检查的配置
healthcheck:
  open: true
  service: polaris.checker
  slotNum: 30
  minCheckInterval: 1s
  maxCheckInterval: 30s
  clientCheckInterval: 1s
  clientCheckTtl: 2s
  batch:
    heartbeat:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 32
      concurrency: 64
  checkers:
    - name: heartbeatMemory
# 缓存配置
cache:
  open: true
  resources:
    - name: service # Load service data
      option:
        disableBusiness: false # Do not load business services
        needMeta: true # Load service metadata
    - name: instance # Load instance data
      option:
        disableBusiness: false # Do not load business service examples
        needMeta: true # Load instance metadata
    - name: routingConfig # Load route data
    - name: rateLimitConfig # Load current limit data
    - name: circuitBreakerConfig # Load the fuse data
    - name: users # Load user and user group data
    - name: strategyRule # Loading the rules of appraisal
    - name: namespace # Load the naming space data
    - name: client # Load Client-SDK instance data
    - name: configFile
    - name: configGroup
    - name: faultDetectRule
    - name: serviceContract
#    - name: l5 # 加载l5数据
# 存储配置
store:
  # 单机文件存储插件
  name: boltdbStore
  option:
    path: ./polaris.bolt
# 插件配置
plugin:
  crypto:
    entries:
      - name: AES
  history:
    entries:
      - name: HistoryLogger
  discoverEvent:
    entries:
      - name: discoverEventLocal
  discoverStatis:
    name: discoverLocal
    option:
      interval: 60 # 统计间隔，单位为秒
      outputPath: ./discover-statis
  statis:
    name: local
    option:
      interval: 60 # 统计间隔，单位为秒
      outputPath: ./statis
    # api 调用指标数据计算上报到 prometheus
    # name: prometheus
    # option:
    #   interval: 60 # 统计间隔，单位为秒
  ratelimit:
    name: token-bucket
    option:
      remote-conf: false # 是否使用远程配置
      ip-limit: # ip级限流，全局
        open: true # 系统是否开启ip级限流
        global:
          open: true
          bucket: 300 # 最高峰值
          rate: 200 # 平均一个IP每秒的请求数
        resource-cache-amount: 1024 # 最大缓存的IP个数
        white-list: [127.0.0.1]
      instance-limit:
        open: true
        global:
          bucket: 200
          rate: 100
        resource-cache-amount: 1024
      api-limit: # 接口级限流
        open: false # 是否开启接口限流，全局开关，只有为true，才代表系统的限流开启。默认关闭
        rules:
          - name: store-read
            limit:
              open: true # 接口的全局配置，如果在api子项中，不配置，则该接口依据global来做限制
              bucket: 2000 # 令牌桶最大值
              rate: 1000 # 每秒产生的令牌数
          - name: store-write
            limit:
              open: true
              bucket: 1000
              rate: 500
        apis:
          - name: "POST:/v1/naming/services"
            rule: store-write
          - name: "PUT:/v1/naming/services"
            rule: store-write
          - name: "POST:/v1/naming/services/delete"
            rule: store-write
          - name: "GET:/v1/naming/services"
            rule: store-read
          - name: "GET:/v1/naming/services/count"
            rule: store-read
